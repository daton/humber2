{"version":3,"sources":["webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/humber.service.ts","webpack:///./src/app/myuploaditem.ts","webpack:///./src/environments/environment.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 139\n// module chunks = 1","module.exports = \"<h1>\\n  {{title}}\\n</h1>\\n\\n\\n<h2>Cargar archivo de consulta y generar comparativo</h2>\\n<p>Primero selecciona el archivo y despúes oprime el botón Cargar archivo.</p>\\n <input type=\\\"file\\\" name=\\\"file\\\" id=\\\"myFileInputField\\\"/>\\n <button (click)=\\\"submit()\\\">Cargar archivo</button>\\n<br>\\n<br>\\n<h2>Generar comparativo</h2>\\n<p>Al oprimir el botón se generará el archivo con la información del comparativo</p>\\n<button (click)=\\\"obtenerArchivo()\\\">Generar archivo de comparativo</button>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 141\n// module chunks = 1","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 72;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 72\n// module chunks = 1","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component, Directive } from '@angular/core';\nimport { HumberService } from './humber.service';\n\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport { Uploader }  from 'angular2-http-file-upload';\nimport { UploadItem }    from 'angular2-http-file-upload';\nimport { MyUploadItem} from './myuploaditem';\n\n\n\n\n\n@Component({\n  selector: 'app-root',\n\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  providers: [HumberService],\n\n})\n\n\n\nexport class AppComponent {\n  title = 'Consulta OII';\n\n  constructor(private servicio: HumberService, public uploaderService: Uploader) {\n\n  }\n  ngOnInit() {\n  }\n  /*\n  getTodo() {\n    this.servicio.getMensaje()\n      .subscribe();\n  }\n  */\n  obtenerArchivo() {\n    this.servicio.obtenerArchivo()\n      .subscribe(res => {\n        // saveAs(res,\"InvoiceNo\"+receiptID+\".pdf\");  \n      //  window.open('http://localhost:9000/generar', \"_blank\");\n        \n        window.location.href='http://localhost:9000/generar';\n      });\n  }\n\nsubmit() {\n        let uploadFile = (<HTMLInputElement>window.document.getElementById('myFileInputField')).files[0];\n \n        let myUploadItem = new MyUploadItem(uploadFile);\n        myUploadItem.formData = { FormDataKey: 'Form Data Value' };  // (optional) form data can be sent with file\n \n        this.uploaderService.onSuccessUpload = (item, response, status, headers) => {\n             // success callback\n       var respuesta=   JSON.parse(response);\n          console.log(\"Todo fue un exito con estatus \"+respuesta.success);\n        };\n        this.uploaderService.onErrorUpload = (item, response, status, headers) => {\n             // error callback\n          console.log(\"se cometio un error \");\n        };\n        this.uploaderService.onCompleteUpload = (item, response, status, headers) => {\n             // complete callback, called regardless of success or failure\n          console.log(\"todo termino bien\");\n        };\n        this.uploaderService.upload(myUploadItem);\n    }\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { Uploader } from 'angular2-http-file-upload';\n\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule\n  ],\n  providers: [Uploader],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Injectable } from '@angular/core';\n// Los siguientes 3 se importan para un servicio http\nimport { Http, Response } from '@angular/http';\nimport { Headers, RequestOptions, ResponseContentType } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\n\n\n\n@Injectable()\nexport class HumberService {\n  private mensajeUrl = 'http://localhost:9000/generar';  // URL al servicio\n\n  constructor(private http: Http) {\n\n  }\n\n  obtenerArchivo() {\n\n\n\n    const headers = new Headers({\n      'Content-Type': 'application/json',\n       'MyApp-Application': 'AppName',\n       'Accept': 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;'\n    });\n    const options = new RequestOptions({ headers: headers, responseType: ResponseContentType.Blob });\n\n\n    return this.http.get(this.mensajeUrl, options)\n      .map((res) => {\n        return new Blob([res.arrayBuffer()],\n        { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;' });\n      });\n  }\n\n\n\n \n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/humber.service.ts","import { UploadItem }    from 'angular2-http-file-upload';\n \nexport class MyUploadItem extends UploadItem {\n    constructor(file: any) {\n        super();\n        this.url = 'http://localhost:9000/consultaoii';\n        this.headers = { HeaderName: 'Header Value', AnotherHeaderName: 'Another Header Value' };\n        this.file = file;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/myuploaditem.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts"],"sourceRoot":""}